module.exports = {
    branches: [
        { name: 'main', channel: 'latest'
        }
    ],
    // Add this line to use the remote branch
    repositoryUrl: 'https: //github.com/aves-omni/tmdb-addon',
    // Use the version from package.json as the initial version
    tagFormat: 'v${version
    }',
    // Start from the current version in package.json
    lastRelease: {
      version: require('./package.json').version
    },
    dryRun: false,
    ci: true,
    plugins: [
        // This plugin determines the next version number
        ['@semantic-release/commit-analyzer',
            {
        preset: 'angular',
        releaseRules: [
                    { type: 'feat', release: 'minor'
                    },
                    { type: 'fix', release: 'patch'
                    },
                    { type: 'docs', release: 'patch'
                    },
                    { type: 'docs', scope: 'README', release: 'patch'
                    },
                    { type: 'refactor', release: 'patch'
                    },
                    { type: 'style', release: 'patch'
                    },
                    { type: 'chore', release: 'patch'
                    },
                    { type: 'perf', release: 'patch'
                    },
                    { type: 'ci', release: 'patch'
                    },
                    { type: 'test', release: 'patch'
                    },
                    { type: 'build', release: 'patch'
                    },
                    { scope: 'no-release', release: false
                    }
                ],
        parserOpts: {
          noteKeywords: ['BREAKING CHANGE', 'BREAKING CHANGES'
                    ]
                }
            }
        ],
        ['@semantic-release/release-notes-generator',
            {
        preset: 'angular',
        parserOpts: {
          noteKeywords: ['BREAKING CHANGE', 'BREAKING CHANGES'
                    ]
                },
        writerOpts: {
          commitsSort: ['subject', 'scope'
                    ],
                    // Add types configuration to include CI commits in changelog
          types: [
                        { type: 'feat', section: 'Features'
                        },
                        { type: 'fix', section: 'Bug Fixes'
                        },
                        { type: 'docs', section: 'Documentation'
                        },
                        { type: 'style', section: 'Styles'
                        },
                        { type: 'refactor', section: 'Code Refactoring'
                        },
                        { type: 'perf', section: 'Performance Improvements'
                        },
                        { type: 'test', section: 'Tests'
                        },
                        { type: 'build', section: 'Build System'
                        },
                        { type: 'ci', section: 'CI/CD Changes'
                        }, // This will add CI commits to changelog
                        { type: 'chore', section: 'Chores'
                        }
                    ]
                }
            }
        ],
        ['@semantic-release/changelog',
            {
        changelogFile: 'CHANGELOG.md',
        changelogTitle: '# TMDB Addon Changelog\n\nAll notable changes to this project will be documented in this file.'
            }
        ],
        // Updates version in package.json but doesn't publish to npm
        ['@semantic-release/npm',
            {
        npmPublish: false
            }
        ],
      '@semantic-release/github',
        [
        '@semantic-release/git',
            {
          assets: ['package.json', 'package-lock.json', 'CHANGELOG.md'
                ],
          message: 'chore(release): ${nextRelease.version
                } [skip ci
                ]\n\n${nextRelease.notes
                }'
            }
        ]
    ]
};